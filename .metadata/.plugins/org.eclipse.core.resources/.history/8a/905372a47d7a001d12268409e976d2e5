<!DOCTYPE html>
<html lang="en">
	<head>
		<title>three.js webgl - geometry - cube</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<link type="text/css" rel="stylesheet" href="main.css">
	</head>
	<body>

		<!-- Import maps polyfill -->
		<!-- Remove this when import maps will be widely supported -->
		<script async src="https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js"></script>

		<script type="importmap">
			{
				"imports": {
					"three": "../build/three.module.js",
					"three/addons/": "./jsm/"
				}
			}
		</script>

		<script type="module">

			import * as THREE from 'three';

			let camera, scene, renderer;
			let mesh;

			var meshes = [];

			var xzs = [
				{'x' :	-100, 'z' :   100},
				{'x' :	0	, 'z' :   100},
				{'x' :	0	, 'z' :	  100},

				{'x' :	-100, 'z' :		0},
				{'x' :	0	, 'z' : 	0},
				{'x' :	-100, 'z' : 	0},

				{'x' : 	-100, 'z' : 100},
				{'x' : 	0	, 'z' : 100},
				{'x' : 	-100, 'z' : 100}
			];

			var xs = [
				-100, 
			];

			var zs = [
					
			];

			init();
			animate();

			function init() {

				camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
				camera.position.y = 150;
				camera.position.z = 400;

				scene = new THREE.Scene();

				const texture = new THREE.TextureLoader().load( 'textures/carbon/Carbon_Normal.png' );

				renderer = new THREE.WebGLRenderer( { antialias: true } );
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( window.innerWidth, window.innerHeight );
				document.body.appendChild( renderer.domElement );
				
				for (var i = 0; i < 9; i++) {
			
				var geometry = new THREE.CylinderGeometry( 50, 50, 10, 50 );	
				var material = new THREE.MeshBasicMaterial( {color: 0xff0000, wireframe : true } );
					var mesh = new THREE.Mesh( geometry1, material1 );

				meshes[0].position.x = -150;
				meshes[2].position.x = 150;
				
				meshes[3].position.z = -150;
				meshes[3].position.x = -150;
				meshes[4].position.z = -150;
				meshes[5].position.x = 150;
				meshes[5].position.z = -150;
				
				meshes[6].position.z = -300;
				meshes[6].position.x = -150;
				meshes[7].position.z = -300;
				meshes[8].position.x = 150;
				meshes[8].position.z = -300;
				
				scene.add( meshes );
//				scene.add( mesh2 );
//				scene.add( mesh3 );
//				scene.add( mesh4 );
//				scene.add( mesh5 );
//				scene.add( mesh6 );
//				scene.add( mesh7 );
//				scene.add( mesh8 );
//				scene.add( mesh9 );

				window.addEventListener( 'resize', onWindowResize );

			}

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

			}
			
			function meshess(i){
				meshes[i].rotation.y += 0.01;
				meshes[i].position.y += 0.01;
			}
			
			function animate() {

				requestAnimationFrame( animate );
				
				meshes(0);
				setInterval(meshes(1), 1000);
				setInterval(meshes(2), 2000);
				setInterval(meshes(3), 3000);
				setInterval(meshes(4), 4000);
				setInterval(meshes(5), 5000);
				setInterval(meshes(6), 6000);
				setInterval(meshes(7), 7000);
				setInterval(meshes(8), 8000);

				renderer.render( scene, camera );
			}

		</script>

	</body>
</html>
